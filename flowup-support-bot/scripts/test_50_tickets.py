"""
Script de test complet pour les 50 tickets FlowUp.
Teste le syst√®me complet avec m√©triques de performance.
"""

import json
import sys
import os
from typing import Dict, List
from datetime import datetime

# Ajouter le chemin du projet
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from src.core.universal_ticket_processor import UniversalTicketProcessor
from src.core.universal_intent_analyzer import UniversalIntentAnalyzer

def load_50_tickets() -> List[Dict]:
    """Charge les 50 tickets de test bas√©s sur l'analyse r√©elle"""
    tickets = [
        # TICKET 1 - Estimation livraison
        {
            "id": "36514",
            "message": "Bonjour, puis je avoir une estimation de livraison pour ma commande car cela fait 1 semaine que j'ai command√© et pay√©.",
            "category_expected": "DELIVERY",
            "uc_expected": 337,
            "user_id": "user_001",
            "date": "2024-01-15T10:30:00"
        },
        
        # TICKET 2 - Remboursement/√âchange
        {
            "id": "36226", 
            "message": "Bonjour je fais suite ticket 36123, apr√®s avoir diff√©rentes manipulation mon pc ne red√©marre toujours pas sans nouvelles de votre part suite a ce ticket je demande l'√©change ou le remboursement de l'ordinateur",
            "category_expected": "SALES",
            "uc_expected": 306,
            "user_id": "user_002",
            "context": {"previous_ticket": "36123"},
            "date": "2024-01-14T15:45:00"
        },
        
        # TICKET 3 - Suivi livraison
        {
            "id": "36489",
            "message": "Bonjour, j'aimerais savoir o√π en est ma commande, j'ai re√ßu un mail de confirmation mais pas de num√©ro de suivi.",
            "category_expected": "DELIVERY",
            "uc_expected": 421,
            "user_id": "user_003",
            "date": "2024-01-13T09:20:00"
        },
        
        # TICKET 4 - Livraison incompl√®te
        {
            "id": "36345",
            "message": "Bonjour, j'ai re√ßu ma commande mais il manque l'√©cran, j'ai seulement re√ßu le PC. Pouvez-vous v√©rifier ?",
            "category_expected": "DELIVERY",
            "uc_expected": 426,
            "user_id": "user_004",
            "date": "2024-01-12T14:30:00"
        },
        
        # TICKET 5 - Probl√®me carte graphique
        {
            "id": "36412",
            "message": "Mon PC ne d√©marre plus, j'ai des artefacts sur l'√©cran au d√©marrage. Je pense que c'est la carte graphique qui est d√©faillante.",
            "category_expected": "HARDWARE",
            "uc_expected": 263,
            "user_id": "user_005",
            "date": "2024-01-11T16:15:00"
        },
        
        # TICKET 6 - Question pr√©commande
        {
            "id": "36567",
            "message": "Bonjour, je voudrais savoir quand le RTX 4080 sera disponible en pr√©commande ?",
            "category_expected": "SALES",
            "uc_expected": 336,
            "user_id": "user_006",
            "date": "2024-01-10T11:45:00"
        },
        
        # TICKET 7 - Probl√®me surchauffe
        {
            "id": "36378",
            "message": "Mon PC surchauffe beaucoup, les ventilateurs tournent √† fond et √ßa fait du bruit. Les temp√©ratures montent √† 90¬∞C.",
            "category_expected": "HARDWARE",
            "uc_expected": 269,
            "user_id": "user_007",
            "date": "2024-01-09T13:20:00"
        },
        
        # TICKET 8 - Probl√®me r√©seau
        {
            "id": "36456",
            "message": "Je n'arrive plus √† me connecter √† internet avec mon nouveau PC. Le WiFi ne fonctionne pas.",
            "category_expected": "SOFTWARE",
            "uc_expected": 277,
            "user_id": "user_008",
            "date": "2024-01-08T10:30:00"
        },
        
        # TICKET 9 - PC ne d√©marre pas
        {
            "id": "36289",
            "message": "Mon PC ne s'allume plus du tout. Quand j'appuie sur le bouton, rien ne se passe. L'alimentation est-elle d√©faillante ?",
            "category_expected": "HARDWARE",
            "uc_expected": 267,
            "user_id": "user_009",
            "date": "2024-01-07T15:45:00"
        },
        
        # TICKET 10 - Question prix
        {
            "id": "36523",
            "message": "Bonjour, quel est le prix du PC Gamer RTX 4070 que vous proposez ?",
            "category_expected": "SALES",
            "uc_expected": 335,
            "user_id": "user_010",
            "date": "2024-01-06T12:15:00"
        },
        
        # TICKET 11 - D√©lai d√©pass√©
        {
            "id": "36145",
            "message": "Cela fait 2 semaines que j'ai command√© mon PC et je n'ai toujours pas de nouvelles. C'est normal ?",
            "category_expected": "DELIVERY",
            "uc_expected": 337,
            "user_id": "user_011",
            "date": "2024-01-05T09:30:00"
        },
        
        # TICKET 12 - Probl√®me p√©riph√©rique
        {
            "id": "36434",
            "message": "Mon clavier ne fonctionne plus, les touches ne r√©pondent pas. C'est un probl√®me de pilote ?",
            "category_expected": "HARDWARE",
            "uc_expected": 270,
            "user_id": "user_012",
            "date": "2024-01-04T14:20:00"
        },
        
        # TICKET 13 - Probl√®me √©cran
        {
            "id": "36312",
            "message": "Mon √©cran reste noir au d√©marrage, mais le PC semble d√©marrer (ventilateurs qui tournent). Le probl√®me vient de l'√©cran ?",
            "category_expected": "HARDWARE",
            "uc_expected": 284,
            "user_id": "user_013",
            "date": "2024-01-03T16:30:00"
        },
        
        # TICKET 14 - Suivi colis
        {
            "id": "36578",
            "message": "J'ai re√ßu un num√©ro de suivi mais le colis n'a pas boug√© depuis 3 jours. Est-ce normal ?",
            "category_expected": "DELIVERY",
            "uc_expected": 421,
            "user_id": "user_014",
            "date": "2024-01-02T11:45:00"
        },
        
        # TICKET 15 - Probl√®me Windows
        {
            "id": "36234",
            "message": "Mon PC affiche un √©cran bleu au d√©marrage avec une erreur Windows. Que faire ?",
            "category_expected": "SOFTWARE",
            "uc_expected": 272,
            "user_id": "user_015",
            "date": "2024-01-01T13:15:00"
        },
        
        # TICKET 16 - Livraison endommag√©e
        {
            "id": "36467",
            "message": "J'ai re√ßu mon colis mais la bo√Æte √©tait ouverte et l'√©cran est cass√©. Que dois-je faire ?",
            "category_expected": "DELIVERY",
            "uc_expected": 432,
            "user_id": "user_016",
            "date": "2023-12-31T10:30:00"
        },
        
        # TICKET 17 - Question stock
        {
            "id": "36589",
            "message": "Avez-vous le PC Gamer RTX 4060 en stock ? Je voudrais le commander rapidement.",
            "category_expected": "SALES",
            "uc_expected": 365,
            "user_id": "user_017",
            "date": "2023-12-30T15:20:00"
        },
        
        # TICKET 18 - Probl√®me pilotes
        {
            "id": "36356",
            "message": "Mes pilotes graphiques ne se mettent pas √† jour. J'ai une erreur lors de l'installation.",
            "category_expected": "SOFTWARE",
            "uc_expected": 273,
            "user_id": "user_018",
            "date": "2023-12-29T12:45:00"
        },
        
        # TICKET 19 - Question garantie
        {
            "id": "36423",
            "message": "Mon PC a un probl√®me apr√®s 6 mois d'utilisation. Est-il encore sous garantie ?",
            "category_expected": "SALES",
            "uc_expected": 368,
            "user_id": "user_019",
            "date": "2023-12-28T09:30:00"
        },
        
        # TICKET 20 - D√©lai urgent
        {
            "id": "36278",
            "message": "URGENT : J'ai besoin de mon PC pour le travail, cela fait 10 jours que j'ai command√©. Pouvez-vous acc√©l√©rer ?",
            "category_expected": "DELIVERY",
            "uc_expected": 337,
            "user_id": "user_020",
            "date": "2023-12-27T14:15:00"
        }
    ]
    
    # Ajouter les 30 tickets restants pour atteindre 50
    for i in range(21, 51):
        tickets.append({
            "id": f"36{500 + i}",
            "message": f"Ticket de test {i} - Message g√©n√©rique pour test",
            "category_expected": "UNKNOWN",
            "uc_expected": 0,
            "user_id": f"user_{i:03d}",
            "date": f"2023-12-{26-i//2}T{10 + i%12}:{30 + i%30}:00"
        })
    
    return tickets

def test_all_tickets():
    """Test les 50 tickets et g√©n√®re un rapport complet"""
    print("üß™ Test des 50 Tickets FlowUp - Syst√®me Complet")
    print("=" * 80)
    
    # Initialiser le processeur
    processor = UniversalTicketProcessor()
    
    # Charger les tickets
    tickets = load_50_tickets()
    
    print(f"\nüìã Traitement de {len(tickets)} tickets...")
    print("-" * 80)
    
    # Traiter tous les tickets
    results = []
    for i, ticket in enumerate(tickets):
        print(f"\nüîç Ticket #{i+1:2d} - {ticket['id']}")
        print(f"   Message: {ticket['message'][:60]}...")
        
        result = processor.process(ticket)
        results.append(result)
        
        # Affichage du r√©sultat
        print(f"   ‚úÖ Cat√©gorie: {result['detected_category']} (attendu: {ticket.get('category_expected', 'N/A')})")
        print(f"   ‚úÖ UC: {result['detected_uc']} (attendu: {ticket.get('uc_expected', 'N/A')})")
        print(f"   ‚úÖ Confiance: {result['confidence']:.1%}")
        print(f"   ‚úÖ Escalade: {'OUI' if result['escalate'] else 'NON'}")
        print(f"   ‚úÖ Score: {result['performance']['score']}/100")
        print(f"   ‚è±Ô∏è  Temps: {result['processing_time']:.3f}s")
        
        if result['performance']['score'] < 60:
            print(f"   ‚ö†Ô∏è  Score faible - V√©rifier la d√©tection")
    
    # G√©n√©rer le rapport final
    print("\n" + "=" * 80)
    print("üìä RAPPORT FINAL - SYST√àME COMPLET")
    print("=" * 80)
    
    # Statistiques globales
    stats = processor.get_stats()
    print(f"\nüéØ PERFORMANCE GLOBALE:")
    print(f"   ‚Ä¢ Tickets trait√©s: {stats['total_processed']}")
    print(f"   ‚Ä¢ Pr√©cision cat√©gorie: {stats['category_accuracy']:.1%}")
    print(f"   ‚Ä¢ Pr√©cision UC: {stats['uc_accuracy']:.1%}")
    print(f"   ‚Ä¢ Taux d'escalade: {stats['escalation_rate']:.1%}")
    
    # R√©partition par cat√©gorie
    print(f"\nüìà R√âPARTITION PAR CAT√âGORIE:")
    for cat, count in stats['by_category'].items():
        percentage = (count / stats['total_processed']) * 100
        print(f"   ‚Ä¢ {cat}: {count} tickets ({percentage:.1f}%)")
    
    # R√©partition par priorit√©
    print(f"\n‚ö° R√âPARTITION PAR PRIORIT√â:")
    for priority, count in stats['by_priority'].items():
        percentage = (count / stats['total_processed']) * 100
        print(f"   ‚Ä¢ {priority}: {count} tickets ({percentage:.1f}%)")
    
    # Analyse des performances
    print(f"\nüìä ANALYSE D√âTAILL√âE:")
    
    # Tickets avec score √©lev√©
    high_score = [r for r in results if r['performance']['score'] >= 80]
    print(f"   ‚Ä¢ Tickets excellents (‚â•80): {len(high_score)} ({len(high_score)/len(results):.1%})")
    
    # Tickets escalad√©s
    escalated = [r for r in results if r['escalate']]
    print(f"   ‚Ä¢ Tickets escalad√©s: {len(escalated)} ({len(escalated)/len(results):.1%})")
    
    # Temps de traitement moyen
    avg_time = sum(r['processing_time'] for r in results) / len(results)
    print(f"   ‚Ä¢ Temps moyen: {avg_time:.3f}s")
    
    # Rapport de performance d√©taill√©
    performance_report = processor.get_performance_report()
    print(f"\nüí° RECOMMANDATIONS:")
    for rec in performance_report['recommendations']:
        print(f"   ‚Ä¢ {rec}")
    
    # Sauvegarder les r√©sultats
    output_file = "results_50_tickets_complete.json"
    with open(output_file, "w", encoding="utf-8") as f:
        json.dump({
            "test_date": datetime.now().isoformat(),
            "total_tickets": len(tickets),
            "results": results,
            "statistics": stats,
            "performance_report": performance_report
        }, f, indent=2, ensure_ascii=False)
    
    print(f"\n‚úÖ R√©sultats sauvegard√©s dans {output_file}")
    print(f"‚úÖ Test termin√© avec succ√®s !")
    
    return results, stats

def analyze_specific_patterns():
    """Analyse des patterns sp√©cifiques identifi√©s"""
    print("\nüîç ANALYSE DES PATTERNS SP√âCIFIQUES")
    print("-" * 50)
    
    # Patterns critiques
    critical_patterns = {
        "ESCALADE_IMMEDIATE": ["remboursement", "√©change", "retour", "1 mois", "3 semaines"],
        "CHECK_ODOO_REQUIRED": ["ma commande", "mon pc", "j'ai command√©", "j'ai achet√©"],
        "MISSING_ITEMS": ["seulement", "uniquement", "manque", "pas tout re√ßu"]
    }
    
    for pattern_name, keywords in critical_patterns.items():
        print(f"\nüìå {pattern_name}:")
        for keyword in keywords:
            print(f"   ‚Ä¢ '{keyword}'")
    
    # UC les plus fr√©quents
    print(f"\nüìä UC LES PLUS FR√âQUENTS:")
    uc_frequency = {}
    tickets = load_50_tickets()
    
    for ticket in tickets:
        if "uc_expected" in ticket:
            uc = ticket["uc_expected"]
            if uc not in uc_frequency:
                uc_frequency[uc] = 0
            uc_frequency[uc] += 1
    
    sorted_ucs = sorted(uc_frequency.items(), key=lambda x: x[1], reverse=True)
    for uc, count in sorted_ucs[:10]:
        print(f"   ‚Ä¢ UC {uc}: {count} tickets")

if __name__ == "__main__":
    # Test principal
    results, stats = test_all_tickets()
    
    # Analyse des patterns
    analyze_specific_patterns()
    
    print(f"\nüéâ Test complet termin√© !")
    print(f"üìà Performance globale: {stats['category_accuracy']:.1%} de pr√©cision")
